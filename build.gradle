plugins {
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.7.3"
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'

repositories {
    jcenter()
}


group = 'com.yahoo.viper'
description = 'Java library that monitors a list of hostnames and notifies availability changes'

def viperUrl = 'https://github.com/yahoo/viper'
def viperVcsUrl = 'https://github.com/yahoo/viper.git'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.25'
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.10'
    testCompile group: 'log4j', name: 'log4j', version:'1.2.17'
    testCompile group: 'org.testng', name: 'testng', version:'6.8.21'
}

checkstyle {
    checkstyleTest.enabled = false
    configFile = file("${rootProject.rootDir}/conf/checkstyle.xml")
    configProperties = [ "suppressionFile" : file("${rootProject.rootDir}/conf/checkstyle-suppressions.xml")]
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

release {
    failOnUnversionedFiles = false
    failOnCommitNeeded = true
    tagTemplate = '$name-$version'
    newVersionCommitMessage = '[Gradle Release Plugin] [skip ci] new version release:'
}

test {
    useTestNG()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenRelease']

    publish = true
    override = false
    pkg {
        repo = bintrayRepo
        name = project.name
        desc = project.description
        websiteUrl = viperUrl
        issueTrackerUrl = '${viperUrl}/issues'
        userOrg = 'yahoo'
        licenses = ['BSD 3-clause']
        vcsUrl = viperVcsUrl
    }

    pkg.version {
        name = version
        gpg {
            sign = true
        }
//        mavenCentralSync {
//            sync = true
//            user = ossrhUsername
//            password = ossrhPassword
//        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def pomConfig = {
    licenses {
        license {
            name 'BSD 3-clause "New" or "Revised" License'
            url 'https://github.com/yahoo/viper/blob/master/LICENSE'
            distribution "repo"
        }
    }
//    developers {
//        developer {
//            id "ec-lightyear-dev"
//            name "ec-lightyear-dev"
//            email "ec-lightyear-dev@yahoo-inc.com"
//        }
//    }
    scm {
        connection 'scm:git:https://github.com/yahoo/viper.git'
        developerConnection 'scm:git:https://github.com/yahoo/viper.git'
        url viperUrl
    }
}

publishing {
    publications {
        mavenRelease(MavenPublication) {
            from components.java
            artifact sourcesJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', viperUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload
